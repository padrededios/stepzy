{"version":3,"sources":["../../src/types/index.ts","../../src/types/activity.ts"],"sourcesContent":["/**\n * Main type exports for the application\n */\n\n// Re-export all types from specific modules\nexport * from './user';\nexport * from './match';\nexport * from './activity';\n\n// Re-export SportType from constants (used by activity types)\nexport type { SportType } from '../constants/sports';\n\n// Common API types\nexport interface ApiResponse<T = unknown> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  message?: string;\n}\n\n// Form data types\nexport interface CreateUserData {\n  email: string;\n  password: string;\n  pseudo: string;\n  avatar?: string;\n  role?: 'user' | 'root';\n}\n\nexport interface UpdateUserData {\n  pseudo?: string;\n  avatar?: string;\n  email?: string;\n}\n\nexport interface LoginData {\n  email: string;\n  password: string;\n}\n","/**\n * Types pour le système d'activités récurrentes\n */\n\nimport type { SportType } from '../constants/sports'\n\nexport type RecurringType = 'weekly' | 'monthly'\nexport type SessionStatus = 'active' | 'cancelled' | 'completed'\nexport type ParticipantStatus = 'interested' | 'confirmed' | 'waiting'\n\nexport type DayOfWeek = 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday'\n\nexport interface Activity {\n  id: string\n  name: string\n  description?: string\n  sport: SportType\n  minPlayers: number\n  maxPlayers: number\n  createdBy: string\n  isPublic: boolean\n  createdAt: Date\n  updatedAt: Date\n\n  // Récurrence\n  recurringDays: DayOfWeek[]\n  recurringType: RecurringType\n  startTime: string // Format HH:MM\n  endTime: string   // Format HH:MM\n\n  // Relations\n  creator: {\n    id: string\n    pseudo: string\n    avatar: string | null\n  }\n  sessions?: ActivitySession[]\n}\n\nexport interface ActivitySession {\n  id: string\n  activityId: string\n  date: Date\n  status: SessionStatus\n  maxPlayers: number\n  isCancelled: boolean\n  createdAt: Date\n  updatedAt: Date\n\n  // Relations\n  activity?: Activity\n  participants?: ActivityParticipant[]\n\n  // Computed fields\n  currentParticipants?: number\n  confirmedParticipants?: number\n  waitingParticipants?: number\n}\n\nexport interface ActivityParticipant {\n  id: string\n  sessionId: string\n  userId: string\n  status: ParticipantStatus\n  joinedAt: Date\n\n  // Relations\n  session?: ActivitySession\n  user: {\n    id: string\n    pseudo: string\n    avatar: string | null\n  }\n}\n\n// Types pour les formulaires\nexport interface CreateActivityData {\n  name: string\n  description?: string\n  sport: SportType\n  minPlayers: number\n  maxPlayers: number\n  recurringDays: DayOfWeek[]\n  recurringType: RecurringType\n  startTime: string\n  endTime: string\n}\n\nexport interface UpdateActivityData {\n  name?: string\n  description?: string\n  minPlayers?: number\n  maxPlayers?: number\n  recurringDays?: DayOfWeek[]\n  recurringType?: RecurringType\n}\n\nexport interface UpdateSessionData {\n  maxPlayers?: number\n  isCancelled?: boolean\n}\n\n// Types pour les vues\nexport interface ActivityWithStats extends Activity {\n  totalSessions: number\n  upcomingSessions: number\n  totalParticipants: number\n  averageParticipation: number\n}\n\nexport interface SessionWithParticipants extends ActivitySession {\n  participants: ActivityParticipant[]\n  currentParticipants: number\n  confirmedParticipants: number\n  waitingParticipants: number\n  userParticipation?: ActivityParticipant | null\n}\n\n// Types pour les requêtes API\nexport interface ActivityFilters {\n  sport?: SportType\n  createdBy?: string\n  isPublic?: boolean\n  recurringType?: RecurringType\n  recurringDays?: DayOfWeek[]\n}\n\nexport interface SessionFilters {\n  activityId?: string\n  status?: SessionStatus\n  dateFrom?: Date\n  dateTo?: Date\n  hasSpots?: boolean\n}\n\n// Configuration des jours de la semaine\nexport const DAY_LABELS: Record<DayOfWeek, string> = {\n  monday: 'Lundi',\n  tuesday: 'Mardi',\n  wednesday: 'Mercredi',\n  thursday: 'Jeudi',\n  friday: 'Vendredi',\n  saturday: 'Samedi',\n  sunday: 'Dimanche'\n}\n\nexport const RECURRING_TYPE_LABELS: Record<RecurringType, string> = {\n  weekly: 'Chaque semaine',\n  monthly: 'Chaque mois'\n}\n\nexport const PARTICIPANT_STATUS_LABELS: Record<ParticipantStatus, string> = {\n  interested: 'Intéressé',\n  confirmed: 'Confirmé',\n  waiting: 'En attente'\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACwIO,IAAM,aAAwC;AAAA,EACnD,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,WAAW;AAAA,EACX,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,QAAQ;AACV;AAEO,IAAM,wBAAuD;AAAA,EAClE,QAAQ;AAAA,EACR,SAAS;AACX;AAEO,IAAM,4BAA+D;AAAA,EAC1E,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,SAAS;AACX;","names":[]}